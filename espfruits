local highlightColor = Color3.fromRGB(255, 0, 0) -- Red for highlighting
local outlineColor = Color3.fromRGB(255, 255, 0) -- Yellow for outline

-- Function to create a highlight for a given part
local function createHighlight(part)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = part
    highlight.FillColor = highlightColor
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = outlineColor
    highlight.OutlineTransparency = 0
    highlight.Parent = part
end

-- Iterate through all fruits in the workspace and highlight them
for _, fruit in ipairs(workspace:GetDescendants()) do
    if fruit:IsA("Part") and fruit.Name == "Fruit" then
        createHighlight(fruit)
    end
end

-- Optional: Update highlights when new fruits are added
workspace.DescendantAdded:Connect(function(descendant)
    if descendant:IsA("Part") and descendant.Name == "Fruit" then
        createHighlight(descendant)
    end
end)

-- Create a toggle button to show/hide highlights
local function createToggleButton()
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 100, 0, 50)
    button.Position = UDim2.new(1, -110, 1, -60)
    button.BackgroundColor3 = Color3.fromRGB(0, 0, 255)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Text = "Toggle"
    button.Parent = screenGui

    local showFruits = true

    button.MouseButton1Click:Connect(function()
        showFruits = not showFruits
        for _, fruit in ipairs(workspace:GetDescendants()) do
            if fruit:IsA("Part") and fruit.Name == "Fruit" then
                fruit.Highlight.Enabled = showFruits
            end
        end
    end)
end

createToggleButton()
